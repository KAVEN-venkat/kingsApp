{"version":3,"sources":["webpack:///src/app/device/device.page.html","webpack:///src/app/device/device-routing.module.ts","webpack:///src/app/device/device.module.ts","webpack:///src/app/device/device.page.scss","webpack:///src/app/device/device.page.ts"],"names":["routes","path","component","DevicePageRoutingModule","imports","forChild","exports","DevicePageModule","declarations","DevicePage","bluetoothSerial","navCtrl","alertCtrl","toastCtrl","listToggle","pairedDeviceID","dataSend","checkBluetoothEnabled","$event","target","value","isEnabled","then","success","listPairedDevices","error","showError","list","pairedList","alert","connectedDevice","address","name","connect","subscribe","deviceConnected","showToast","handleData","disconnect","data","write","console","log","create","header","subHeader","buttons","present","msg","message","duration","toast","selector","template"],"mappings":"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","file":"device-device-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-menu-button auto-hide=\\\"false\\\"></ion-menu-button>\\n\\t\\t\\t\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-buttons slot=\\\"primary\\\">\\n\\t\\t\\t<ion-button>\\n\\t\\t\\t\\t<ion-icon name=\\\"log-out-outline\\\" class=\\\"logoutbtn\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title class=\\\"ion-text-center\\\"><img src=\\\"../../assets/logo-header.png\\\" alt=\\\"\\\" class=\\\"header-logo\\\"></ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <button ion-button full class=\\\"submit-button\\\" (click)=\\\"listPairedDevices()\\\">\\n    <ion-icon name=\\\"refresh\\\"></ion-icon>&nbsp;Refresh Bluetooth Devices</button>\\n  <ion-row>\\n    <ion-col>\\n      <!-- <ion-list radio-group [(ngModel)]=\\\"pairedDeviceID\\\" *ngIf=\\\"listToggle\\\">\\n        <ion-item *ngFor=\\\"let i of pairedList;let j=index\\\">\\n          <ion-label>{{i.name}}</ion-label>\\n          <ion-radio value=\\\"{{j}}\\\" ></ion-radio>\\n        </ion-item>\\n      </ion-list> -->\\n\\t\\t<ion-radio-group *ngIf=\\\"listToggle\\\" (ionChange)=\\\"onChangeHandler($event)\\\">\\n\\t\\t<ion-item *ngFor=\\\"let i of pairedList;let j=index\\\">\\n\\t\\t\\t<ion-label>{{i.name}}</ion-label>\\n\\t\\t\\t<ion-radio value=\\\"{{j}}\\\"></ion-radio>\\n\\t\\t</ion-item>\\n\\t\\t</ion-radio-group>\\n    </ion-col>\\n  </ion-row>\\n  <button ion-button full class=\\\"submit-button\\\" *ngIf=\\\"listToggle\\\" (click)=\\\"selectDevice()\\\">\\n    <ion-icon name=\\\"bluetooth\\\"></ion-icon>&nbsp;Connect Bluetooth Devices</button>\\n  <!-- <ion-list>\\n    <ion-item>\\n      <ion-label floating>Type The Data You want to Send</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"datasend\\\" [(ngModel)]=\\\"dataSend\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n  <button ion-button full class=\\\"submit-button\\\" (click)=\\\"sendData()\\\">\\n    <ion-icon name=\\\"send\\\"></ion-icon>&nbsp;Send Data Via Bluetooth\\n  </button>\\n  <button ion-button full class=\\\"submit-button\\\" (click)=\\\"readData()\\\">\\n    <ion-icon name=\\\"send\\\"></ion-icon>&nbsp;Read Data Via Bluetooth\\n  </button> -->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DevicePage } from './device.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DevicePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DevicePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DevicePageRoutingModule } from './device-routing.module';\n\nimport { DevicePage } from './device.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DevicePageRoutingModule\n  ],\n  declarations: [DevicePage]\n})\nexport class DevicePageModule {}\n","export default \":host .submit-btn {\\n  color: #FFF;\\n  background: rgba(0, 0, 0, 0);\\n  border-radius: 30px !important;\\n  border: 1px solid #FFF;\\n}\\n:host .logoutbtn {\\n  font-size: 24px;\\n}\\n:host .submit-button {\\n  background-color: #6d00be !important;\\n  color: #ffffff;\\n  box-shadow: none !important;\\n  height: 2.5rem;\\n  font-size: larger;\\n  width: 95%;\\n  margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL2RldmljZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxXQUFBO0VBQ0EsNEJBQUE7RUFDQSw4QkFBQTtFQUNBLHNCQUFBO0FBQVI7QUFFTTtFQUFZLGVBQUE7QUFDbEI7QUFBTTtFQUNFLG9DQUFBO0VBQ0EsY0FBQTtFQUNBLDJCQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7QUFFUiIsImZpbGUiOiJzcmMvYXBwL2RldmljZS9kZXZpY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIC5zdWJtaXQtYnRuIHtcbiAgICAgICAgY29sb3I6I0ZGRjtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweCAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjRkZGO1xuICAgICAgfVxuICAgICAgLmxvZ291dGJ0bnsgZm9udC1zaXplOiAyNHB4OyB9XG4gICAgICAuc3VibWl0LWJ1dHRvbntcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzZkMDBiZSAhaW1wb3J0YW50O1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IDIuNXJlbTtcbiAgICAgICAgZm9udC1zaXplOiBsYXJnZXI7XG4gICAgICAgIHdpZHRoOiA5NSU7XG4gICAgICAgIG1hcmdpbjoxMHB4O1xuICAgICAgfVxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\nimport { NavController, AlertController, ToastController } from '@ionic/angular';\n@Component({\n  selector: 'app-device',\n  templateUrl: './device.page.html',\n  styleUrls: ['./device.page.scss'],\n})\nexport class DevicePage implements OnInit {\n\tpairedList:pairedlist;\n\tlistToggle: boolean = false;\n\tpairedDeviceID: number = 0;\n\tdataSend: string = \"\";\n\tconstructor(private bluetoothSerial: BluetoothSerial, public navCtrl:NavController, private alertCtrl:AlertController, private toastCtrl: ToastController) {\n\t\tthis.checkBluetoothEnabled();\n\t}\n\n\tngOnInit() {\n\t\t\n\t}\n\tonChangeHandler($event) {\n\t\tthis.pairedDeviceID = $event.target.value;\n\t}\n\tcheckBluetoothEnabled(){\n\t\tthis.bluetoothSerial.isEnabled().then(success => {\n\t\t\tthis.listPairedDevices();\n\t\t},error => {\n\t\t\tthis.showError(\"Please Enable Bluetooth\");\n\t\t});\n\t}\n\tlistPairedDevices(){\n\t\tthis.bluetoothSerial.list().then(success =>{\n\t\t\tthis.pairedList = success;\n      \t\tthis.listToggle = true;\n\t\t},error => {\n\t\t\tthis.showError(\"Please Enable Bluetooth\");\n\t\t\tthis.listToggle = false;\n\t\t});\n\t}\n\tselectDevice(){\n\t\talert(this.pairedDeviceID);\n\t\tlet connectedDevice = this.pairedList[this.pairedDeviceID];\n\t\tif(!connectedDevice.address){\n\t\t\tthis.showError('Select Paired Device to connect');\n\t\t\treturn;\n\t\t}\n\t\tlet address = connectedDevice.address;\n\t\tlet name = connectedDevice.name;\n\t\tthis.connect(address);\n\t}\n\tconnect(address){\n\t\tthis.bluetoothSerial.connect(address).subscribe(success =>{\n\t\t\tthis.deviceConnected();\n\t\t\tthis.showToast(\"Successfully Connected\");\n\t\t}, error => {\n\t\t\tthis.showError(\"Error:Connecting to Device\");\n\t\t});\n\t}\n\n\tdeviceConnected(){\n\t\tthis.bluetoothSerial.subscribe('\\n').subscribe(success => {\n\t\t\tthis.handleData(success);\n\t\t\tthis.showToast(\"Connected Successfully\");\n\t\t},error =>{\n\t\t\tthis.showError(error);\n\t\t});\n\t}\n\tdeviceDisconnected(){\n\t\tthis.bluetoothSerial.disconnect();\n\t\tthis.showToast('Device Disconnected');\n\t}\n\thandleData(data){\n\t\tthis.showToast(data);\n\t}\n\tsendData(){\n\t\t//this.dataSend += '\\n';\n\t\tthis.dataSend = '08-06-2020 \\t\\t\\t\\t\\t 12345 \\n 11111 - 22222 - C \\n 12 - 100000 \\n';\n\t\tthis.showToast(this.dataSend);\n\t\tthis.bluetoothSerial.write(this.dataSend).then(success => {\n\t\t\tthis.showToast(success);\n\t\t},error =>{\n\t\t\tthis.showError(error);\n\t\t});\n\t}\n\n\treadData(){\n\t\tthis.bluetoothSerial.subscribe('\\n').subscribe(success => {\n\t\t\tconsole.log(success);\n\t\t\tthis.showToast(success);\n\t\t},error =>{\n\t\t\tthis.showError(error);\n\t\t});\n\t}\n\n\tasync showError(error){\n\t\tlet alert = await this.alertCtrl.create({\n\t\t\theader: 'Error',\n\t      \tsubHeader: error,\n\t      \tbuttons: ['Dismiss']\n\t\t});\n\t\tawait alert.present();\n\t}\n\tasync showToast(msg){\n\t\tconst toast = await this.toastCtrl.create({\n\t\t\tmessage:msg,\n\t\t\tduration: 1000\n\t\t});\n\t\ttoast.present();\n\t}\n}\ninterface pairedlist{\n\t\"class\": number,\n\t\"id\": string,\n\t\"address\": string,\n\t\"name\": string\n}"]}